Test

Sub GetFileNames()
    Dim ws As Worksheet
    Dim cell As Range
    Dim folderPath As String
    Dim fileName As String
    Dim rowNum As Integer
    Dim colNum As Integer
    
    ' 対象のシートを設定（アクティブシートでも可）
    Set ws = ThisWorkbook.Sheets("Sheet1")  ' シート名を適宜変更
    
    ' A列の最初のセル(A1)から開始
    Set cell = ws.Range("A1")
    
    ' 出力開始位置（B列）
    colNum = 2  ' B列に出力
    
    ' 値があるセルを繰り返し処理
    Do While cell.Value <> ""
        folderPath = cell.Value
        
        ' パスの最後に "\" を追加（必要なら）
        If Right(folderPath, 1) <> "\" Then folderPath = folderPath & "\"
        
        ' 最初のファイル取得
        fileName = Dir(folderPath & "*.*") ' すべてのファイル取得
        
        ' 出力用の行を現在のセルの行に合わせる
        rowNum = cell.Row
        
        ' ファイルが存在する場合
        If fileName <> "" Then
            Do While fileName <> ""
                ' セルに出力（B列）
                ws.Cells(rowNum, colNum).Value = fileName
                rowNum = rowNum + 1  ' 次の行へ
                
                ' 次のファイル取得
                fileName = Dir
            Loop
        Else
            ' ファイルがない場合は「（ファイルなし）」と記載
            ws.Cells(rowNum, colNum).Value = "（ファイルなし）"
        End If
        
        ' 次のディレクトリパスへ（A列を下に移動）
        Set cell = cell.Offset(1, 0)
    Loop
    
    MsgBox "ファイル取得が完了しました！", vbInformation
End Sub


Sub GetFileNames()
    Dim wsSource As Worksheet
    Dim wsOutput As Worksheet
    Dim cell As Range
    Dim folderPath As String
    Dim fileName As String
    Dim rowNum As Integer
    
    ' 元データのシート（A列にフォルダパスがあるシート）
    Set wsSource = ThisWorkbook.Sheets("Sheet1")  ' シート名は適宜変更
    
    ' 新しいシートを作成して出力用に設定
    Set wsOutput = ThisWorkbook.Sheets.Add
    wsOutput.Name = "ファイル一覧_" & Format(Now, "hhmmss") ' 一意な名前を設定
    
    ' ヘッダーを設定
    wsOutput.Cells(1, 1).Value = "フォルダパス"
    wsOutput.Cells(1, 2).Value = "ファイル名"
    rowNum = 2 ' 出力行（データ開始行）

    ' A1セルから開始し、値がなくなるまで処理
    Set cell = wsSource.Range("A1")
    
    Do While cell.Value <> ""
        folderPath = cell.Value
        
        ' パスの最後に "\" を追加（必要なら）
        If Right(folderPath, 1) <> "\" Then folderPath = folderPath & "\"
        
        ' 最初のファイル取得
        fileName = Dir(folderPath & "*.*") ' すべてのファイル取得
        
        ' フォルダの出力
        If fileName <> "" Then
            Do While fileName <> ""
                ' フォルダパスとファイル名を新しいシートに出力
                wsOutput.Cells(rowNum, 1).Value = folderPath
                wsOutput.Cells(rowNum, 2).Value = fileName
                rowNum = rowNum + 1  ' 次の行へ
                
                ' 次のファイル取得
                fileName = Dir
            Loop
        Else
            ' ファイルがない場合は「（ファイルなし）」と記載
            wsOutput.Cells(rowNum, 1).Value = folderPath
            wsOutput.Cells(rowNum, 2).Value = "（ファイルなし）"
            rowNum = rowNum + 1
        End If
        
        ' 次のフォルダへ
        Set cell = cell.Offset(1, 0)
    Loop
    
    MsgBox "ファイル取得が完了しました！", vbInformation
End Sub



サブフォルダまで検索
Sub GetAllFiles()
    Dim wsSource As Worksheet
    Dim wsOutput As Worksheet
    Dim cell As Range
    Dim folderPath As String
    Dim rowNum As Integer
    
    ' 元データのシート（A列にフォルダパスがあるシート）
    Set wsSource = ThisWorkbook.Sheets("Sheet1")  ' シート名は適宜変更
    
    ' 新しいシートを作成して出力用に設定
    Set wsOutput = ThisWorkbook.Sheets.Add
    wsOutput.Name = "ファイル一覧_" & Format(Now, "hhmmss") ' 一意な名前を設定
    
    ' ヘッダーを設定
    wsOutput.Cells(1, 1).Value = "フォルダパス"
    wsOutput.Cells(1, 2).Value = "ファイル名"
    rowNum = 2 ' 出力開始行

    ' A1セルから開始し、値がなくなるまで処理
    Set cell = wsSource.Range("A1")
    
    Do While cell.Value <> ""
        folderPath = cell.Value
        
        ' パスの最後に "\" を追加（必要なら）
        If Right(folderPath, 1) <> "\" Then folderPath = folderPath & "\"
        
        ' 指定フォルダとサブフォルダ内のファイルを取得
        Call GetFilesRecursive(folderPath, wsOutput, rowNum)
        
        ' 次のフォルダへ
        Set cell = cell.Offset(1, 0)
    Loop
    
    MsgBox "ファイル取得が完了しました！", vbInformation
End Sub

' 再帰的にフォルダ内のすべてのファイルを取得
Sub GetFilesRecursive(ByVal folderPath As String, ByVal wsOutput As Worksheet, ByRef rowNum As Integer)
    Dim fso As Object
    Dim folder As Object
    Dim subFolder As Object
    Dim file As Object

    ' FileSystemObjectを作成
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    ' フォルダが存在しない場合は処理を中断
    If Not fso.FolderExists(folderPath) Then
        wsOutput.Cells(rowNum, 1).Value = folderPath
        wsOutput.Cells(rowNum, 2).Value = "（フォルダなし）"
        rowNum = rowNum + 1
        Exit Sub
    End If
    
    ' 指定フォルダをセット
    Set folder = fso.GetFolder(folderPath)
    
    ' フォルダ内のファイルを取得
    For Each file In folder.Files
        wsOutput.Cells(rowNum, 1).Value = folder.Path
        wsOutput.Cells(rowNum, 2).Value = file.Name
        rowNum = rowNum + 1
    Next file
    
    ' サブフォルダ内のファイルも取得（再帰処理）
    For Each subFolder In folder.SubFolders
        Call GetFilesRecursive(subFolder.Path, wsOutput, rowNum)
    Next subFolder
End Sub



エビデンス自動貼り付け

Sub 貼り付けエビデンス()
    Dim ws As Worksheet
    Dim folderPath As String
    Dim fileName As String
    Dim pic As Picture
    Dim rowNum As Integer
    Dim colNum As Integer
    Dim targetCell As Range
    
    ' --- 選択されているセルを取得 ---
    Set ws = ActiveSheet
    Set targetCell = Selection.Cells(1, 1) ' 選択範囲の先頭セル
    
    ' 貼り付け開始位置
    rowNum = targetCell.Row
    colNum = targetCell.Column
    
    ' --- フォルダ選択ダイアログを表示 ---
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "エビデンス画像のフォルダを選択してください"
        If .Show = -1 Then
            folderPath = .SelectedItems(1) & "\"
        Else
            MsgBox "フォルダが選択されませんでした", vbExclamation
            Exit Sub
        End If
    End With

    ' --- 指定フォルダの画像を取得 ---
    fileName = Dir(folderPath & "*.png") ' PNG画像を取得
    If fileName = "" Then fileName = Dir(folderPath & "*.jpg") ' JPG画像を取得
    If fileName = "" Then
        MsgBox "画像ファイルが見つかりません", vbExclamation
        Exit Sub
    End If
    
    ' --- 画像を順番に貼り付ける ---
    Do While fileName <> ""
        ' 貼り付けるセルを設定
        Set targetCell = ws.Cells(rowNum, colNum)
        
        ' 画像を挿入
        Set pic = ws.Pictures.Insert(folderPath & fileName)
        
        ' 画像の位置とサイズをセルに合わせる
        With pic
            .Top = targetCell.Top
            .Left = targetCell.Left
            .Width = targetCell.Width
            .Height = targetCell.Height
        End With
        
        ' 次の行に移動（3セル間隔を空ける）
        rowNum = rowNum + 4 ' 画像の下に3セル開ける（+1 で次のセル、+3 で間隔確保）
        
        ' 次の画像取得
        fileName = Dir()
    Loop
    
    MsgBox "エビデンス貼り付け完了", vbInformation
End Sub




Sub 貼り付けエビデンス()
    Dim ws As Worksheet
    Dim folderPath As String
    Dim fileName As String
    Dim pic As Picture
    Dim rowNum As Integer
    Dim colNum As Integer
    Dim targetCell As Range
    
    ' --- 選択されているセルを取得 ---
    Set ws = ActiveSheet
    Set targetCell = Selection.Cells(1, 1) ' 選択範囲の先頭セル
    
    ' 貼り付け開始位置
    rowNum = targetCell.Row
    colNum = targetCell.Column
    
    ' --- フォルダ選択ダイアログを表示 ---
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "エビデンス画像のフォルダを選択してください"
        If .Show = -1 Then
            folderPath = .SelectedItems(1) & "\"
        Else
            MsgBox "フォルダが選択されませんでした", vbExclamation
            Exit Sub
        End If
    End With

    ' --- 指定フォルダの画像を取得 ---
    fileName = Dir(folderPath & "*.png") ' PNG画像を取得
    If fileName = "" Then fileName = Dir(folderPath & "*.jpg") ' JPG画像を取得
    If fileName = "" Then
        MsgBox "画像ファイルが見つかりません", vbExclamation
        Exit Sub
    End If
    
    ' --- 画像を順番に貼り付ける ---
    Do While fileName <> ""
        ' 貼り付けるセルを設定
        Set targetCell = ws.Cells(rowNum, colNum)
        
        ' 画像を挿入（サイズ変更なし）
        Set pic = ws.Pictures.Insert(folderPath & fileName)
        
        ' 画像の位置をセルの左上に合わせる（サイズ変更なし）
        With pic
            .Top = targetCell.Top
            .Left = targetCell.Left
        End With
        
        ' 次のセルに移動（縦方向に3セル間隔を空ける）
        rowNum = rowNum + 4 ' 画像の下に3セル開ける（+1 で次のセル、+3 で間隔確保）
        
        ' 次の画像取得
        fileName = Dir()
    Loop
    
    MsgBox "エビデンス貼り付け完了", vbInformation
End Sub



Sub 貼り付けエビデンス()
    Dim ws As Worksheet
    Dim folderPath As String
    Dim fileName As String
    Dim pic As Picture
    Dim lastRow As Integer
    Dim targetCell As Range
    Dim picTop As Double
    
    ' --- 選択されているセルを取得 ---
    Set ws = ActiveSheet
    Set targetCell = Selection.Cells(1, 1) ' 選択範囲の先頭セル
    
    ' --- フォルダ選択ダイアログを表示 ---
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "エビデンス画像のフォルダを選択してください"
        If .Show = -1 Then
            folderPath = .SelectedItems(1) & "\"
        Else
            MsgBox "フォルダが選択されませんでした", vbExclamation
            Exit Sub
        End If
    End With

    ' --- 指定フォルダの画像を取得 ---
    fileName = Dir(folderPath & "*.png") ' PNG画像を取得
    If fileName = "" Then fileName = Dir(folderPath & "*.jpg") ' JPG画像を取得
    If fileName = "" Then
        MsgBox "画像ファイルが見つかりません", vbExclamation
        Exit Sub
    End If
    
    ' --- 画像を順番に貼り付ける ---
    Do While fileName <> ""
        ' 画像を挿入（サイズ変更なし）
        Set pic = ws.Pictures.Insert(folderPath & fileName)
        
        ' 貼り付けるセルを設定
        Set targetCell = ws.Cells(targetCell.Row, targetCell.Column)
        
        ' 画像の位置をセルの左上に合わせる（サイズ変更なし）
        With pic
            .Top = targetCell.Top
            .Left = targetCell.Left
        End With
        
        ' 画像の高さを基に、次の画像の貼り付け位置を決める
        picTop = pic.Top + pic.Height ' 現在の画像の下端位置
        
        ' --- 最後の画像が配置されたセルを取得し、3行空ける ---
        lastRow = ws.Cells(ws.Rows.Count, targetCell.Column).End(xlUp).Row
        
        ' 画像の下に3行空けて次の画像を貼り付ける
        targetCell = ws.Cells(lastRow + 4, targetCell.Column)
        
        ' 次の画像取得
        fileName = Dir()
    Loop
    
    MsgBox "エビデンス貼り付け完了", vbInformation
End Sub
